[
	{
		"id": 1,
		"name": "photostock-react",
		"type": "client",
		"tech": "js, react, redux, css, axios",
		"github": "https://github.com/stepblazev/photostock-react",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/1kIfObJENWKKrRdJqaAYEVZ2KQHTVN6Be=w1382-h937-iv1",
			"mobile": "https://lh3.google.com/u/0/d/1AIEyKAm6m6Pm7XTcqSEBpjXTKsEU7r1u=w1382-h937-iv1"
		},
		"description": {
			"ru": "Проект является фотостоком (изображения), то есть он предоставляет возможность пользователям искать, просматривать и загружать изображения. В проекте реализована система авторизации, которая позволяет пользователям создавать учетные записи и входить в свои аккаунты. Для хранения изображений и информации о пользователях используется внешний проект photostock-api, с которым взаимодействует данное приложение. В проекте реализованы функции поиска изображений по тегам, а также возможность сортировки результатов по дате или количеству лайков. Также проект включает в себя возможность загрузки собственных изображений пользователей, а также систему рейтинга, позволяющую пользователям ставить лайк. Основной интерфейс приложения реализован с помощью React, а взаимодействие с сервером осуществляется с использованием Axios. Проект пока не завершен до конца.",
			"en": "The project is a photostock (images), that is, it allows users to search, browse and download images. The project implements an authorization system that allows users to create accounts and log in to their accounts. To store images and information about users, an external project photostock-api is used, with which this application interacts. The project includes features for searching images by tags, as well as the ability to sort results by date or number of likes. The project also includes the ability to upload users' own images, as well as a rating system that allows users to give likes. The main interface of the application is implemented using React, and the interaction with the server is done using Axios. The project is not yet complete to the end."
		}
	},
	{
		"id": 3,
		"name": "test-calc-vistegra",
		"type": "client",
		"tech": "js, react, css",
		"github": "https://github.com/stepblazev/test-calc-vistegra",
		"ghPages": "https://stepblazev.github.io/test-calc-vistegra/",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/1C1cjIIXNRqRcyru7R0_wHIqlwg2XbmJP=w1920-h937-iv1",
			"mobile": "https://lh3.google.com/u/0/d/1QRLBTzs_uY7D3_0nOwyJWqmZLw6cQ3Fz=w1206-h937-iv1"
		}
	},
	{
		"id": 2,
		"name": "stopwatch-typescript",
		"type": "client",
		"tech": "ts, html, css",
		"github": "https://github.com/stepblazev/stopwatch-typescript",
		"ghPages": "https://stepblazev.github.io/stopwatch-typescript/",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/1XyXID4jKe5DA6pVfZrV9a4hmN7CLtRgY=w1920-h937-iv1",
			"mobile": "https://lh3.google.com/u/0/d/1sfvWenn_GFdEqry6aNyz-C3-mAs0IaZg=w1382-h937-iv1"
		}
	},
	{
		"id": 4,
		"name": "landing-techno-teal",
		"type": "client",
		"tech": "html, css, js, gulp",
		"github": "https://github.com/stepblazev/landing-techno-teal",
		"ghPages": "https://stepblazev.github.io/landing-techno-teal/",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/19-c62MfJXe2GkRzbfHE2GSijzpnxIHof=w1382-h937-iv1",
			"mobile": "https://lh3.google.com/u/0/d/1MvgvM0KRdSdCJlpxh6jeKKH2qfhx44Ar=w1382-h937-iv1"
		}
	},
	{
		"id": 5,
		"name": "sbv-website",
		"type": "client",
		"tech": "html, css, js, gulp",
		"github": "https://github.com/stepblazev/sbv-website",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/1cW6MSipAyRtrBl6dMrDaONcfLL7i_dJs=w1206-h937-iv1"
		}
	},
	{
		"id": 6,
		"name": "photostock-api",
		"type": "server",
		"tech": "node, express, jwt, sql",
		"github": "https://github.com/stepblazev/photostock-api",
		"preview": {
			"desktop": "https://lh3.google.com/u/0/d/1TZjwr-07Mhu3tOkHmEeok2WmRy8_ZSRZ=w1206-h937-iv1"
		},
		"description": {
			"ru": "Данный проект на Node.js использует фреймворк Express для создания серверной части приложения. Для хранения данных используется PostgreSQL.Проект реализует систему авторизации с использованием JWT-токенов и cookies. Он обрабатывает изображения, полученные от клиента, и хранит их на сервере. В целом, проект предоставляет возможность клиентам загружать изображения на сервер, а также обрабатывать их на серверной стороне. Система авторизации и работа с базой данных обеспечивают безопасность и эффективность работы приложения.",
			"en": "This Node.js project uses the Express framework to create the server side of the application. It uses PostgreSQL to store data.The project implements an authorization system using JWT tokens and cookies. It processes the images received from the client and stores them on the server. In general, the project allows clients to upload images to the server and process them on the server side. The authorization system and database handling ensure the security and efficiency of the application."
		}
	}
]
